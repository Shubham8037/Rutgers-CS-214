My code repeats through the info character by character and records the situation of a separator (or the start of the string) until the situation of another separator(or the finish of the string). At the point when my code peruses a separator, it apportions enough memory for the hub using the positions recorded previously. A hub is made to hold the word and to embed it into the connected rundown. Before the hub is embedded into the connected show, it is contrasted with alternate hubs to figure out where it ought to be embedded. As we are entrusted with putting the words in slipping sequential request with upper casing precedence, I needed to make a strategy for looking at strings. I made this technique on the grounds that the cmpstr as of now in the library had priority of lowercase letters over capitalized ones. The hub is then embedded into the connected rundown. After the entire string has been iterated through and the connected rundown is finished, the connected rundown is printed out and the dispensed memory is liberated.
